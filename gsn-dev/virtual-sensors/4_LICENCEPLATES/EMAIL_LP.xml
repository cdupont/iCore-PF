<virtual-sensor name="emailLicencePlate" priority="10">
    <processing-class>
        <class-name>gsn.processor.ScriptletProcessor</class-name>
        <init-params>
            <param name="persistant">false</param>
            <param name="scriptlet">
                <![CDATA[

                    // This script sends an email to alert that a new QR (o LP) was decoded
                    // Please set your SMTP configuration (in the conf/email.properties) prior to use this script.
                
                	// Example of getting a logger
                    def logger = org.apache.log4j.Logger.getLogger(gsn.processor.ScriptletProcessor.class);
					
					if ( ! isdef('current')){
                        current = "";
                	}
                    // Comparing 
                    if (current != DECODED ) {
                		current = DECODED;
                
                		def parsed = DECODED as String;
                
                		
  						logger.warn('I WILL POST A NEW LP: ' + parsed);              		
                
	                	// Notify by email
                        def emailSubject = "GSN Notification - New LP: " + parsed;
                        def emailBody = "This email is just to inform you that the following LP was detected by your android device: " + parsed;
                        def destinations = ["vecchiomassimo@gmail.com", "createnet.android@gmail.com"]; // Define one or more recipients

                        sendEmail(destinations, emailSubject, emailBody); // note that the sendMail method is imported statically to the script.
                }
                else{
                	logger.info('I HAVE ALREADY SENT THIS QR...just dropping it');
                }
                ]]>
            </param>
        </init-params>
        <output-structure/>
    </processing-class>
    <description>
        This sensor sends an email to GSN Account when a new qr code is decoded
    </description>
    <addressing/>
    <storage history-size="1"/>
    <streams>
        <stream name="stream1">
            <source alias="source1" storage-size="1" sampling-rate="1">
                <address wrapper="local">
                    <predicate key="name">LP_FROMFOLDER</predicate>
<!--					<predicate key="query">select decoded from SarxosRemoteCamRecognitionVS</predicate-->
                </address>
                <query>select decoded from wrapper</query>
            </source>
            <query>select * from source1</query>
        </stream>
    </streams>
</virtual-sensor>
